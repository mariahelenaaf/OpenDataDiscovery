Open Data Discovery Implementation.
Methods included: Jaccard, Cosine Similarity, LDA-W2V, Semantic Unionability, hybrid method with LDA-W2V and Cosine.

This implementation aims at discovering the open data source more likely to answer an input question. The candidate sources are contained in 'sources-descriptions' folder (you can choose either '5-sources.csv' or '8-sources.csv' file. 

1. Run 'topics-lda.py' for generating, in 'input' folder, the LDA topic-word distributions for each data source. You can skip this step if your 'input' folder already has the generated files. Otherwise, the generation requires:
	1.1. Setting in the file the number of candidate data sources that will be used (5 or 8). Code lines 202-204.
	1.2. Setting in the file the number of topics that will be used in the LDA model, through 'n_topics' or 'best_n_topics' variables. Code lines 190-191. Depending on your choice, use the most appropriate LDA model (code lines 56-60).

2. Run 'ldacosine-v2.py' for generating, in 'output' folder, the Word2Vec extensions for all 'input' folder files. This will allow to classify an input question into one data source. For this step, it is necessary:
	2.1. Setting the number of sources' topic words that will be extended through Word2Vec. Code lines 339-341. 
	2.2. Setting the test set (questions and answers) that will be used to perform and evaluate the classification (48 or 74 questions/answers). Code lines 360-363. 
	2.3. Choose a classification method. Code lines 212-216.
	2.4. Make sure you have files inside 'preprocessedsources' folder. These files are generated by 'topics-lda.py', code line 217. 

PS: All open data sources are described in Brazilian Portuguese. Word2Vec functions use Portuguese embeddings from FastText.




